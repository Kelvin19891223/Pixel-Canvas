user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;



events {
    worker_connections 1024;
}

http {
  # proxy_cache_path  /var/run/cache levels=1:2 keys_zone=STATIC:75m max_size=10g inactive=60m;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;

  gzip                on;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).
  # Default: off
  gzip_proxied       any;

  # Tell proxies to cache both the gzipped and regular version of a resource
  # whenever the client's Accept-Encoding capabilities header varies;
  # Avoids the issue where a non-gzip capable client (which is extremely rare
  # today) would display gibberish if their proxy gave them the gzipped version.
  # Default: off
  gzip_vary          on;

  # Compress all output labeled with one of the following MIME-types.
  # text/html is always compressed by gzip module.
  # Default: text/html
  gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      text/vcard
      text/vnd.rim.location.xloc
      text/vtt
      text/x-component
      text/x-cross-domain-policy;


  ##
  # Logging Settings
  ##

  access_log /var/log/nginx/access.log;

  upstream pixel_upstream {
      server 127.0.0.1:2368;
      keepalive 64;
  }

  server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name _;
    server_tokens off;
    # add_header X-Cache $upstream_cache_status;

    # Match homepage
    location = / {
      include /etc/nginx/pixelcanvas.conf;
    }

    location ~\.(ini|log|conf)$ {
         deny all;
    }

    location / {
        root /home/pixel/www/public;
        try_files $uri $uri/ @pixelcanvas;
        expires max;
        access_log off;


        ## Set the OS file cache.
        open_file_cache max=100 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    location @pixelcanvas {
      include /etc/nginx/pixelcanvas.conf;
    }
  }
}
